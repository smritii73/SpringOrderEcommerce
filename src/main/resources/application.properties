spring.application.name=EcommerceOrderServiceSpring
spring.datasource.url=jdbc:mysql://localhost:3306/order_db
spring.datasource.username=${sql_username}
spring.datasource.password=${sql_password}
#this tells springboot which jdbc driver class to use
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#tells hibernate to print all generated sql queries to the console; useful for debugging and learning.
spring.jpa.show-sql=true
#specifies the sql dialect hibernate should use
#ensures hibernate generates sql optimized sql syntax; without this, springboot might guess based on jdbc url
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#controls how hibernate handles schema generation
#instead of update, if we select none -> no changes to db schema
#create-> drops and recreates schema in every run
#create-drop -> drops schema and app stops
#update -> updates db schema(adds new cols/tables, wont delete anything)
spring.jpa.hibernate.ddl-auto=update
server.port=${PORT}
#spring.flyway.enabled=true
#spring.flyway.locations=classpath:db/migration
# you are identifying this as a eureka client and if i want to interact w eureka, below is the url to hit
eureka.client.service-url.defaultZone = ${eureka_url}